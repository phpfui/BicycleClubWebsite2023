<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?float $amount MySQL type decimal(7,2)
 * @property string $createdDate MySQL type date
 * @property ?int $createdMemberNumber MySQL type int
 * @property ?int $invoiceId MySQL type int
 * @property \App\Record\Invoice $invoice related record
 * @property int $paypalRefundId MySQL type int
 * @property \App\Record\PaypalRefund $paypalRefund related record
 * @property ?string $paypaltx MySQL type varchar(20)
 * @property ?string $refundOnDate MySQL type date
 * @property ?string $refundedDate MySQL type date
 * @property ?string $response MySQL type text
 */
abstract class PaypalRefund extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['paypalRefundId', ];

	protected static string $table = 'paypalRefund';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'amount' => new \PHPFUI\ORM\FieldDefinition('decimal(7,2)', 'float', 8, true, ),
				'createdDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'createdMemberNumber' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'invoiceId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'paypalRefundId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'paypaltx' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, ),
				'refundOnDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'refundedDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'response' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
			];
			}

		return $this;
		}
	}
