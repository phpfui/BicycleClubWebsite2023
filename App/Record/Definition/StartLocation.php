<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?int $active MySQL type tinyint
 * @property ?string $address MySQL type varchar(255)
 * @property ?string $directions MySQL type text
 * @property ?float $latitude MySQL type decimal(10,6)
 * @property ?string $link MySQL type varchar(255)
 * @property ?float $longitude MySQL type decimal(10,6)
 * @property ?string $name MySQL type varchar(100)
 * @property ?string $nearestExit MySQL type varchar(255)
 * @property int $startLocationId MySQL type int
 * @property \App\Record\StartLocation $startLocation related record
 * @property ?string $state MySQL type varchar(2)
 * @property ?string $town MySQL type varchar(50)
 * @property ?string $zip MySQL type varchar(10)
 */
abstract class StartLocation extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['startLocationId', ];

	protected static string $table = 'startLocation';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'active' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, true, 1, ),
				'address' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'directions' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'latitude' => new \PHPFUI\ORM\FieldDefinition('decimal(10,6)', 'float', 10, true, ),
				'link' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'longitude' => new \PHPFUI\ORM\FieldDefinition('decimal(10,6)', 'float', 10, true, ),
				'name' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, ),
				'nearestExit' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'startLocationId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'state' => new \PHPFUI\ORM\FieldDefinition('varchar(2)', 'string', 2, true, '', ),
				'town' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, '', ),
				'zip' => new \PHPFUI\ORM\FieldDefinition('varchar(10)', 'string', 10, true, ),
			];
			}

		return $this;
		}
	}
