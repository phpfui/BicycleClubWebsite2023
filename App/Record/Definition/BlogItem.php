<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property int $blogId MySQL type int
 * @property \App\Record\Blog $blog related record
 * @property ?int $membersOnly MySQL type int
 * @property ?int $noTitle MySQL type int
 * @property ?int $onTop MySQL type int
 * @property ?int $ranking MySQL type int
 * @property ?int $showFull MySQL type int
 * @property int $storyId MySQL type int
 * @property \App\Record\Story $story related record
 */
abstract class BlogItem extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = false;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['blogId', 'storyId', ];

	protected static string $table = 'blogItem';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'blogId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'membersOnly' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'noTitle' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'onTop' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'ranking' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'showFull' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'storyId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
			];
			}

		return $this;
		}
	}
