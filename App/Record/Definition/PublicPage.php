<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?int $banner MySQL type int
 * @property ?int $blog MySQL type int
 * @property ?string $blogAfter MySQL type varchar(100)
 * @property ?string $endDate MySQL type date
 * @property int $footerMenu MySQL type tinyint
 * @property ?int $header MySQL type int
 * @property ?int $hidden MySQL type int
 * @property int $homePageNotification MySQL type tinyint
 * @property ?string $method MySQL type varchar(200)
 * @property ?string $name MySQL type varchar(200)
 * @property int $publicMenu MySQL type tinyint
 * @property int $publicPageId MySQL type int
 * @property \App\Record\PublicPage $publicPage related record
 * @property ?int $sequence MySQL type int
 * @property ?string $startDate MySQL type date
 * @property ?string $url MySQL type varchar(100)
 */
abstract class PublicPage extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['publicPageId', ];

	protected static string $table = 'publicPage';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'banner' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'blog' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'blogAfter' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, ),
				'endDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'footerMenu' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'header' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'hidden' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'homePageNotification' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'method' => new \PHPFUI\ORM\FieldDefinition('varchar(200)', 'string', 200, true, ),
				'name' => new \PHPFUI\ORM\FieldDefinition('varchar(200)', 'string', 200, true, ),
				'publicMenu' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 1, ),
				'publicPageId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'sequence' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'startDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'url' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, ),
			];
			}

		return $this;
		}
	}
