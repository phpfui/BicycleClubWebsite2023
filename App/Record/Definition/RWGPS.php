<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property int $RWGPSId MySQL type int
 * @property \App\Record\RWGPS $RWGPS related record
 * @property ?int $club MySQL type int
 * @property ?string $country MySQL type varchar(255)
 * @property ?string $csv MySQL type text
 * @property ?string $description MySQL type varchar(255)
 * @property ?float $elevationFeet MySQL type decimal(8,0)
 * @property ?float $elevationMeters MySQL type decimal(8,0)
 * @property ?float $feetPerMile MySQL type decimal(5,1)
 * @property ?string $lastSynced MySQL type datetime
 * @property ?string $lastUpdated MySQL type datetime
 * @property ?float $km MySQL type decimal(10,2)
 * @property ?float $latitude MySQL type decimal(10,6)
 * @property ?float $longitude MySQL type decimal(10,6)
 * @property ?float $metersPerKm MySQL type decimal(5,2)
 * @property ?float $miles MySQL type decimal(10,2)
 * @property ?int $percentPaved MySQL type int
 * @property ?string $query MySQL type varchar(255)
 * @property ?int $startLocationId MySQL type int
 * @property \App\Record\StartLocation $startLocation related record
 * @property ?string $state MySQL type varchar(255)
 * @property ?string $title MySQL type varchar(255)
 * @property ?string $town MySQL type varchar(50)
 * @property ?string $zip MySQL type varchar(10)
 */
abstract class RWGPS extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = false;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['RWGPSId', ];

	protected static string $table = 'RWGPS';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'RWGPSId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'club' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'country' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'csv' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'description' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, '', ),
				'elevationFeet' => new \PHPFUI\ORM\FieldDefinition('decimal(8,0)', 'float', 8, true, ),
				'elevationMeters' => new \PHPFUI\ORM\FieldDefinition('decimal(8,0)', 'float', 8, true, ),
				'feetPerMile' => new \PHPFUI\ORM\FieldDefinition('decimal(5,1)', 'float', 5, true, 0.0, ),
				'lastSynced' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, ),
				'lastUpdated' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, 'CURRENT_TIMESTAMP', ),
				'km' => new \PHPFUI\ORM\FieldDefinition('decimal(10,2)', 'float', 10, true, ),
				'latitude' => new \PHPFUI\ORM\FieldDefinition('decimal(10,6)', 'float', 10, true, ),
				'longitude' => new \PHPFUI\ORM\FieldDefinition('decimal(10,6)', 'float', 10, true, ),
				'metersPerKm' => new \PHPFUI\ORM\FieldDefinition('decimal(5,2)', 'float', 5, true, ),
				'miles' => new \PHPFUI\ORM\FieldDefinition('decimal(10,2)', 'float', 10, true, ),
				'percentPaved' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 100, ),
				'query' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'startLocationId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'state' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'title' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, '', ),
				'town' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, '', ),
				'zip' => new \PHPFUI\ORM\FieldDefinition('varchar(10)', 'string', 10, true, ),
			];
			}

		return $this;
		}
	}
