<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?float $amount MySQL type decimal(6,2)
 * @property string $dateReceived MySQL type date
 * @property ?int $enteringMemberNumber MySQL type int
 * @property ?int $invoiceId MySQL type int
 * @property \App\Record\Invoice $invoice related record
 * @property ?int $membershipId MySQL type int
 * @property \App\Record\Membership $membership related record
 * @property ?string $paymentDated MySQL type date
 * @property int $paymentId MySQL type int
 * @property \App\Record\Payment $payment related record
 * @property ?string $paymentNumber MySQL type varchar(50)
 * @property ?int $paymentType MySQL type int
 */
abstract class Payment extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['paymentId', ];

	protected static string $table = 'payment';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'amount' => new \PHPFUI\ORM\FieldDefinition('decimal(6,2)', 'float', 7, true, ),
				'dateReceived' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'enteringMemberNumber' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'invoiceId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'membershipId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'paymentDated' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'paymentId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'paymentNumber' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'paymentType' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
			];
			}

		return $this;
		}
	}
