<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?string $address MySQL type varchar(100)
 * @property ?int $agreedToWaiver MySQL type tinyint
 * @property ?string $comments MySQL type varchar(50)
 * @property ?string $contact MySQL type varchar(50)
 * @property ?string $contactPhone MySQL type char(15)
 * @property ?int $customerId MySQL type int
 * @property \App\Record\Customer $customer related record
 * @property ?string $email MySQL type varchar(50)
 * @property ?int $emailAnnouncements MySQL type int
 * @property ?string $firstName MySQL type varchar(50)
 * @property int $gaEventId MySQL type int
 * @property \App\Record\GaEvent $gaEvent related record
 * @property int $gaRiderId MySQL type int
 * @property \App\Record\GaRider $gaRider related record
 * @property ?string $lastName MySQL type varchar(50)
 * @property int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property int $pending MySQL type int
 * @property ?string $phone MySQL type varchar(20)
 * @property ?float $pricePaid MySQL type decimal(5,2)
 * @property ?int $prize MySQL type int
 * @property string $signedUpOn MySQL type datetime
 * @property ?string $state MySQL type char(2)
 * @property ?string $town MySQL type varchar(50)
 * @property ?string $zip MySQL type varchar(10)
 */
abstract class GaRider extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['gaRiderId', ];

	protected static string $table = 'gaRider';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'address' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, ),
				'agreedToWaiver' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, true, ),
				'comments' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'contact' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'contactPhone' => new \PHPFUI\ORM\FieldDefinition('char(15)', 'string', 15, true, ),
				'customerId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'email' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'emailAnnouncements' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 1, ),
				'firstName' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'gaEventId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'gaRiderId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'lastName' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'pending' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 1, ),
				'phone' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, '', ),
				'pricePaid' => new \PHPFUI\ORM\FieldDefinition('decimal(5,2)', 'float', 5, true, ),
				'prize' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'signedUpOn' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'state' => new \PHPFUI\ORM\FieldDefinition('char(2)', 'string', 2, true, ),
				'town' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, ),
				'zip' => new \PHPFUI\ORM\FieldDefinition('varchar(10)', 'string', 10, true, ),
			];
			}

		return $this;
		}
	}
