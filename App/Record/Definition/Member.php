<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?string $acceptedWaiver MySQL type datetime
 * @property int $allowTexting MySQL type int
 * @property ?string $cellPhone MySQL type varchar(20)
 * @property int $deceased MySQL type int
 * @property int $discountCount MySQL type int
 * @property string $email MySQL type varchar(100)
 * @property int $emailAnnouncements MySQL type tinyint
 * @property int $emailNewsletter MySQL type int
 * @property ?string $emergencyContact MySQL type varchar(50)
 * @property ?string $emergencyPhone MySQL type varchar(20)
 * @property string $extension MySQL type varchar(10)
 * @property string $firstName MySQL type varchar(50)
 * @property int $geoLocate MySQL type int
 * @property int $journal MySQL type tinyint
 * @property string $lastLogin MySQL type datetime
 * @property string $lastName MySQL type varchar(50)
 * @property ?string $license MySQL type char(10)
 * @property ?string $loginAttempts MySQL type varchar(255)
 * @property int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property ?int $membershipId MySQL type int
 * @property \App\Record\Membership $membership related record
 * @property int $newRideEmail MySQL type tinyint
 * @property ?string $password MySQL type varchar(255)
 * @property ?string $passwordReset MySQL type varchar(20)
 * @property ?string $passwordResetExpires MySQL type datetime
 * @property int $pendingLeader MySQL type int
 * @property ?string $phone MySQL type varchar(20)
 * @property int $profileHeight MySQL type int
 * @property int $profileWidth MySQL type int
 * @property int $profileX MySQL type int
 * @property int $profileY MySQL type int
 * @property ?int $rideComments MySQL type int
 * @property int $rideJournal MySQL type tinyint
 * @property int $showNoPhone MySQL type tinyint
 * @property ?int $showNoRideSignup MySQL type int
 * @property int $showNoStreet MySQL type tinyint
 * @property int $showNoTown MySQL type tinyint
 * @property int $showNothing MySQL type tinyint
 * @property int $verifiedEmail MySQL type int
 * @property int $volunteerPoints MySQL type int
 */
abstract class Member extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['memberId', ];

	protected static string $table = 'member';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'acceptedWaiver' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, ),
				'allowTexting' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 1, ),
				'cellPhone' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, '', ),
				'deceased' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'discountCount' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'email' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, false, ),
				'emailAnnouncements' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'emailNewsletter' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 1, ),
				'emergencyContact' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, '', ),
				'emergencyPhone' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, '', ),
				'extension' => new \PHPFUI\ORM\FieldDefinition('varchar(10)', 'string', 10, false, '', ),
				'firstName' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, false, ),
				'geoLocate' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 1, ),
				'journal' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'lastLogin' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'lastName' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, false, ),
				'license' => new \PHPFUI\ORM\FieldDefinition('char(10)', 'string', 10, true, ),
				'loginAttempts' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'membershipId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'newRideEmail' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'password' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'passwordReset' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, ),
				'passwordResetExpires' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, ),
				'pendingLeader' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'phone' => new \PHPFUI\ORM\FieldDefinition('varchar(20)', 'string', 20, true, '', ),
				'profileHeight' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'profileWidth' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'profileX' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'profileY' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'rideComments' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 1, ),
				'rideJournal' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'showNoPhone' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'showNoRideSignup' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'showNoStreet' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'showNoTown' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'showNothing' => new \PHPFUI\ORM\FieldDefinition('tinyint', 'int', 0, false, 0, ),
				'verifiedEmail' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'volunteerPoints' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
			];
			}

		return $this;
		}
	}
