<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?float $discount MySQL type float(10,2)
 * @property ?int $discountCodeId MySQL type int
 * @property \App\Record\DiscountCode $discountCode related record
 * @property ?string $errors MySQL type text
 * @property ?string $fullfillmentDate MySQL type date
 * @property ?string $instructions MySQL type char(125)
 * @property int $invoiceId MySQL type int
 * @property \App\Record\Invoice $invoice related record
 * @property int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property string $orderDate MySQL type date
 * @property ?int $paidByCheck MySQL type int
 * @property ?string $paymentDate MySQL type date
 * @property ?float $paypalPaid MySQL type decimal(7,2)
 * @property ?string $paypaltx MySQL type varchar(50)
 * @property ?int $pointsUsed MySQL type int
 * @property ?float $totalPrice MySQL type decimal(7,2)
 * @property ?float $totalShipping MySQL type decimal(7,2)
 * @property ?float $totalTax MySQL type decimal(7,2)
 */
abstract class Invoice extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['invoiceId', ];

	protected static string $table = 'invoice';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'discount' => new \PHPFUI\ORM\FieldDefinition('float(10,2)', 'float', 11, true, ),
				'discountCodeId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'errors' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'fullfillmentDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'instructions' => new \PHPFUI\ORM\FieldDefinition('char(125)', 'string', 125, true, ),
				'invoiceId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'orderDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'paidByCheck' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'paymentDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'paypalPaid' => new \PHPFUI\ORM\FieldDefinition('decimal(7,2)', 'float', 8, true, ),
				'paypaltx' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, '', ),
				'pointsUsed' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'totalPrice' => new \PHPFUI\ORM\FieldDefinition('decimal(7,2)', 'float', 8, true, ),
				'totalShipping' => new \PHPFUI\ORM\FieldDefinition('decimal(7,2)', 'float', 8, true, ),
				'totalTax' => new \PHPFUI\ORM\FieldDefinition('decimal(7,2)', 'float', 8, true, ),
			];
			}

		return $this;
		}
	}
