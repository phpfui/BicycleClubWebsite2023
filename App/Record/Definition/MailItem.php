<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?string $body MySQL type mediumtext
 * @property ?string $domain MySQL type varchar(30)
 * @property ?string $fromEmail MySQL type varchar(255)
 * @property ?string $fromName MySQL type varchar(255)
 * @property ?int $html MySQL type int
 * @property int $mailItemId MySQL type int
 * @property \App\Record\MailItem $mailItem related record
 * @property ?int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property ?int $paused MySQL type int
 * @property ?string $replyTo MySQL type varchar(100)
 * @property ?string $replyToName MySQL type varchar(100)
 * @property ?string $title MySQL type varchar(255)
 */
abstract class MailItem extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['mailItemId', ];

	protected static string $table = 'mailItem';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'body' => new \PHPFUI\ORM\FieldDefinition('mediumtext', 'string', 16777215, true, ),
				'domain' => new \PHPFUI\ORM\FieldDefinition('varchar(30)', 'string', 30, true, '', ),
				'fromEmail' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, '', ),
				'fromName' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, '', ),
				'html' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'mailItemId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'paused' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, 0, ),
				'replyTo' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, '', ),
				'replyToName' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, '', ),
				'title' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, '', ),
			];
			}

		return $this;
		}
	}
