<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property string $added MySQL type datetime
 * @property int $invoiceId MySQL type int
 * @property \App\Record\Invoice $invoice related record
 * @property int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property string $optionsSelected MySQL type varchar(255)
 * @property int $quantity MySQL type int
 * @property int $storeItemId MySQL type int
 * @property \App\Record\StoreItem $storeItem related record
 * @property int $storeOrderId MySQL type int
 * @property \App\Record\StoreOrder $storeOrder related record
 * @property ?string $updated MySQL type datetime
 */
abstract class StoreOrder extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['storeOrderId', ];

	protected static string $table = 'storeOrder';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'added' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'invoiceId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'optionsSelected' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, false, ),
				'quantity' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'storeItemId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'storeOrderId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'updated' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, ),
			];
			}

		return $this;
		}
	}
