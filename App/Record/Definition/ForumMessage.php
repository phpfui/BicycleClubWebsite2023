<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?int $forumId MySQL type int
 * @property \App\Record\Forum $forum related record
 * @property int $forumMessageId MySQL type int
 * @property \App\Record\ForumMessage $forumMessage related record
 * @property ?string $htmlMessage MySQL type mediumtext
 * @property ?string $lastEdited MySQL type datetime
 * @property ?int $lastEditorId MySQL type int
 * @property int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property string $posted MySQL type datetime
 * @property ?string $textMessage MySQL type text
 * @property ?string $title MySQL type varchar(255)
 */
abstract class ForumMessage extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['forumMessageId', ];

	protected static string $table = 'forumMessage';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'forumId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'forumMessageId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'htmlMessage' => new \PHPFUI\ORM\FieldDefinition('mediumtext', 'string', 16777215, true, ),
				'lastEdited' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, ),
				'lastEditorId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'posted' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'textMessage' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'title' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
			];
			}

		return $this;
		}
	}
