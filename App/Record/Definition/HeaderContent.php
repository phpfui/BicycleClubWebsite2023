<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property int $active MySQL type int
 * @property ?string $content MySQL type mediumtext
 * @property ?string $css MySQL type mediumtext
 * @property ?string $endDate MySQL type date
 * @property int $headerContentId MySQL type int
 * @property \App\Record\HeaderContent $headerContent related record
 * @property ?string $javaScript MySQL type text
 * @property ?string $name MySQL type varchar(100)
 * @property ?int $showDay MySQL type int
 * @property ?int $showMonth MySQL type int
 * @property ?string $startDate MySQL type date
 * @property ?string $urlPath MySQL type varchar(255)
 */
abstract class HeaderContent extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['headerContentId', ];

	protected static string $table = 'headerContent';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'active' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'content' => new \PHPFUI\ORM\FieldDefinition('mediumtext', 'string', 16777215, true, ),
				'css' => new \PHPFUI\ORM\FieldDefinition('mediumtext', 'string', 16777215, true, ),
				'endDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'headerContentId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'javaScript' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'name' => new \PHPFUI\ORM\FieldDefinition('varchar(100)', 'string', 100, true, ),
				'showDay' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'showMonth' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'startDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, ),
				'urlPath' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
			];
			}

		return $this;
		}
	}
