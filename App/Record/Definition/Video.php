<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?string $description MySQL type mediumtext
 * @property ?string $fileName MySQL type varchar(255)
 * @property ?int $folderId MySQL type int
 * @property \App\Record\Folder $folder related record
 * @property ?int $hits MySQL type int
 * @property string $lastEdited MySQL type datetime
 * @property ?int $memberId MySQL type int
 * @property \App\Record\Member $member related record
 * @property int $public MySQL type int
 * @property string $title MySQL type varchar(255)
 * @property string $videoDate MySQL type date
 * @property int $videoId MySQL type int
 * @property \App\Record\Video $video related record
 */
abstract class Video extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['videoId', ];

	protected static string $table = 'video';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'description' => new \PHPFUI\ORM\FieldDefinition('mediumtext', 'string', 16777215, true, ),
				'fileName' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, true, ),
				'folderId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'hits' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'lastEdited' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'memberId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'public' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, 0, ),
				'title' => new \PHPFUI\ORM\FieldDefinition('varchar(255)', 'string', 255, false, ),
				'videoDate' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'videoId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
			];
			}

		return $this;
		}
	}
