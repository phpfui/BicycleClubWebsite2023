<?php

namespace App\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property string $date MySQL type date
 * @property ?string $description MySQL type text
 * @property ?int $jobEventId MySQL type int
 * @property \App\Record\JobEvent $jobEvent related record
 * @property int $jobId MySQL type int
 * @property \App\Record\Job $job related record
 * @property ?string $location MySQL type char(100)
 * @property ?int $organizer MySQL type int
 * @property ?string $title MySQL type char(100)
 */
abstract class Job extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['jobId', ];

	protected static string $table = 'job';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'date' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'description' => new \PHPFUI\ORM\FieldDefinition('text', 'string', 65535, true, ),
				'jobEventId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'jobId' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, false, ),
				'location' => new \PHPFUI\ORM\FieldDefinition('char(100)', 'string', 100, true, ),
				'organizer' => new \PHPFUI\ORM\FieldDefinition('int', 'int', 0, true, ),
				'title' => new \PHPFUI\ORM\FieldDefinition('char(100)', 'string', 100, true, ),
			];
			}

		return $this;
		}
	}
